[gd_scene load_steps=7 format=2]

[ext_resource path="res://scripts/ui/Transition.cs" type="Script" id=1]
[ext_resource path="res://assets/art/dissolve.jpg" type="Texture" id=2]

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/dissolveValue")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect:material:shader_param/invert")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}

[sub_resource type="Animation" id=4]
resource_name = "default"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/dissolveValue")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect:material:shader_param/invert")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "EmitTransitionedHalfway"
} ]
}

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D dissolveTexture;
uniform float dissolveValue : hint_range(0.0, 1.0, 0.05);
uniform vec4 wipeColor : hint_color;
uniform bool invert;

void fragment() {
	vec4 texColor = texture(TEXTURE, UV);
	vec4 dissolveColor = texture(dissolveTexture, UV);
	float mask = (dissolveColor.r + dissolveColor.g + dissolveColor.b + dissolveColor.a) / 4.0;
	if (invert) {
		mask = 1.0 - mask;
	}
	
	if (mask > dissolveValue || (invert && mask >= dissolveValue)) {
		COLOR.rgba = vec4(texColor.rgb, 0.0);
	}
	else {
		COLOR.rgba = wipeColor;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/dissolveValue = 0.0
shader_param/wipeColor = Color( 0.0588235, 0.0235294, 0.0980392, 1 )
shader_param/invert = false
shader_param/dissolveTexture = ExtResource( 2 )

[node name="Transition" type="CanvasLayer"]
layer = 10
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 3 )
anims/default = SubResource( 4 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
